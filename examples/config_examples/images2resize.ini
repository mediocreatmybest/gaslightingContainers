[config]
# The input image directory path
#input_dir = c:\images or /path/to/output

# The image output directory path
# output_dir = c:\image_output or /path/to/output/directory

# Keep relative folder structure with output directory (Set to True by default)
#keep_relative = True

# Change the image format. Defaults to "copy" to keep the existing format
# Available options are: jpeg, jpg, png, bmp, webp, copy
#format = copy

# Crops the image to the closest specified multiple
#multiples_crop = False

# Desired image size in multiples of pixel count (e.g., 8)
#multiples_of = 8

# Crops the image to the closest aspect ratio
#aspect_crop = False

# Set aspect ratios as a float or X:Y in a comma-separated list
# 1:1, 2:3, 3:2, 3:4, 4:3, 4:5, 5:4, 16:9, 9:16, 16:10
#aspect_ratios = 1:1, 2:3, 3:2, 3:4, 4:3, 4:5, 5:4, 16:9, 9:16, 16:10

# Flags to resize to the specified min_size while maintaining current or set aspect ratio
#resize = False

# Resize modes available: smallest (resizes based on the smallest side of the image), largest (resizes based on the largest side of the image)
#resize_mode = smallest

# Resample modes: antialias, nearest, box, bilinear, hamming, bicubic, lanczos
# Sets PIL resample method to use when resizing
# 'antialias' (alias of lanczos) Ideal for photos, digital art or similar,
# 'nearest' maintains sharp edges and is useful for pixel art.
#resample_mode = antialias

# The minimum size in pixels for the smallest or largest side based on the selected resize mode.
# If you are using both multiples_crops and aspect_crop, it's recommended to choose a slightly larger min_size,
# as the resize function is executed before cropping.
# min_size in multiple of 64 seems to work best (512, 576, 640, 704, 768, 1024 and so on )
#min_size = 1280

# Skips resizing images that are smaller than the minimum size (min_size). This avoids enlarging images
#skip_smaller = False

# Pads the image to a 1:1 ratio, will either Pillarboxes or Letterboxing
#pad_image = False

# Manually specify a color for transparent background replacement (format: R, G, B)
#color = 211, 211, 211

# Use a limited number of simple background colors for transparent ground replacement
# Leave as False to allow random colours
#common_colors = False

# Print debug messages of output images
#debug = False